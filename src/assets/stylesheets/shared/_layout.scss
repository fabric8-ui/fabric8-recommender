



// @import 'layout-debug';

///////////////////////
// Styles relating to general html document
///////////////////////





//////////////////////
// flex utility styles
//////////////////////

// @mixin flex-grow-x(@count:12) {
//   @for @i from 1 through @count {
//   .flex-grow-#{@i} { flex: @i; }
//   }
// }
// // create 12 flex grow partitions
// @include flex-grow-x(12);


// .flex-container
// {
//     display:flex;
//     &.in-column-direction
//     {
//       flex-direction: column;
//     }
//     &.in-row-direction
//     {
//       flex-direction: row;
//     }
//     &.with-wrap
//     {
//       flex-wrap: wrap;
//     }
//     // Make sure the main,section,aside parts fill the screen and collapse header and footer if not there
//     >main,section,aside
//     {
//       @extend .flex-grow-1;
//     }
//     >.container-fluid
//     {
//       position:relative;
//       width:100%;
//       flex-grow:1;
//     }

// }


// .app{
//   @extend .flex-grow-1;
//   @extend .flex-container;
// };

// an app component is a marker class for angular component dom elements


  // when app-component is the child of a bootstrap column div
  // div[class^="col-"] &
  // {
  //   // margin-left:-@grid-gutter-width/2;
  //   // margin-right:-@grid-gutter-width/2;
  // }
  // div[class*=" col-"] &
  // {
  //   // margin-left:-@grid-gutter-width/2;
  //   // margin-right:-@grid-gutter-width/2;
  // }

  // Note: making relative positioning helps positioning but creates extra margins
  // on nested components, but it offers good absolute positioning options for
  // child elements




// helps to ensure that scrolling does not cross app footer or header
// the reason for not using flex is that view will not always be a flex-container
// This plays out in scenarios where view requires animation like slide ins/slie outs
// These are not good for flex


// // chromeless dialog suppresses all chrome in the ng2-bootstrap modal component
// .chromeless-modal
// {
//   .modal-content
//   {
//     display:flex;
//     border:solid 0 lime;
//     padding:0;
//     margin:0;
//     .modal-header{
//       display:none;
//     }
//     .modal-footer{
//       display:none;
//     }
//     .modal-body{
//       flex:1;
//       display:flex;
//       border:solid 0 orangered;
//       padding:0;
//       .chromeless-modal-content
//       {
//         flex:1;
//         display:flex;
//         border:solid 0 brown;
//         padding:0;

//       }
//     }

//   }
// }

// // wizard
// @wizard-padding:@grid-gutter-width/2;

// .wizard-container{
//   flex:1;
//   display:flex;
//   border:solid 0 orange;
//   position:relative;
//   .wizard{
//     flex:1;
//     display:flex;
//     border:solid 0 darkorange;
//     position:relative;
//     padding:0;
//     padding-bottom:@wizard-padding;

//     .wizard-step{

//       display:none;
//       // at least 50% of view height
//       min-height: 50vh;
//       &.active{
//         display:flex;
//         flex-direction: column;
//       }
//       flex:1;
//       border:solid 0 olivedrab;
//       >header{
//         display:flex;
//         position:relative;
//         justify-content: center;
//         padding:@wizard-padding;
//         background-color: @navbar-default-bg;
//       }
//       >section
//       {
//         flex:1;
//         display:flex;
//         position:relative;
//       }
//       >footer{
//         display:flex;
//         position:relative;
//         justify-content:flex-end;
//         padding:@wizard-padding;
//         padding-bottom:0;
//       }
//     }
//   }
// }
